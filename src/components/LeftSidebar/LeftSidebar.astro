---
import { getLanguageFromURL } from "../../languages";
import { SIDEBAR } from "../../config";

type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props as Props;
const currentPageMatch = currentPage.endsWith("/")
  ? currentPage.slice(1, -1)
  : currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];

function formatTitle(title) {
  return title.replace(/\s+/g, "-").toLowerCase();
}

function findMatchingItem(targetTitle: string, key: "year" | "topic"): boolean {
  const formattedCurrentPage = currentPage.replace("/", "");
  let isOpen = false;

  sidebar.forEach((year) => {
    if (isOpen) return;

    year.items.forEach((topic) => {
      if (isOpen) return;

      topic.items.forEach((module) => {
        if (isOpen) return;

        module.items.forEach(({ link }) => {
          if (link === formattedCurrentPage) {
            if (
              (key === "year" && year.title === targetTitle) ||
              (key === "topic" && topic.title === targetTitle)
            ) {
              isOpen = true;
            }
          }
        });
      });
    });
  });

  return isOpen;
}

function isYearOpen(title: string): boolean {
  return findMatchingItem(title, "year");
}

function isTopicOpen(title: string): boolean {
  return findMatchingItem(title, "topic");
}

function isModuleOpen(title: string) {
  return currentPage.includes(formatTitle(title));
}
---

<nav aria-labelledby="grid-left">
  <ul class="nav-groups">
    {
      sidebar.map((year) => (
        <li>
          <div class="nav-group">
            <details open={isYearOpen(year.title)}>
              <summary>
                <h2>{year.title}</h2>
              </summary>

              <ul>
                {year.items.map((topic) => (
                  <li class="module-section">
                    <details open={isTopicOpen(topic.title)} id="test-topic">
                      <summary>
                        <h3>{topic.title}</h3>
                      </summary>
                      <ul>
                        {topic.items.map((module) => (
                          <li class="top-section">
                            <details
                              open={isModuleOpen(module.title)}
                              id="test-module"
                            >
                              <summary>
                                <h4>{module.title}</h4>
                              </summary>
                              <ul>
                                {module.items.map(({ text, link }) => {
                                  const url = Astro.site?.pathname + link;
                                  console.warn(url);
                                  const isActive = currentPageMatch === link;
                                  return (
                                    <li class="nav-link">
                                      <a
                                        href={url}
                                        aria-current={isActive ? "page" : false}
                                      >
                                        {text}
                                      </a>
                                    </li>
                                  );
                                })}
                              </ul>
                            </details>
                          </li>
                        ))}
                      </ul>
                    </details>
                  </li>
                ))}
              </ul>
            </details>
          </div>
        </li>
      ))
    }
  </ul>
</nav>

<script is:inline>
  window.addEventListener("DOMContentLoaded", () => {
    var target = document.querySelector('[aria-current="page"]');
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector(".nav-groups").scrollTop = target.offsetTop;
    }
  });
</script>

<style>
  nav {
    width: 100%;
    margin-right: 1rem;
    padding-left: 0.2rem;
  }

  .nav-groups {
    height: 100%;
    padding: 2rem 0;
    overflow-x: visible;
    overflow-y: auto;
    max-height: 100vh;
  }

  .nav-groups summary {
    list-style: none;
  }

  .nav-groups summary:hover {
    cursor: pointer;
  }

  .nav-groups > li + li {
    margin-top: 2rem;
  }

  .nav-groups > :first-child {
    padding-top: var(--doc-padding);
  }

  .nav-groups > :last-child {
    padding-bottom: 2rem;
    margin-bottom: var(--theme-navbar-height);
  }

  .nav-group-title {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.1rem 1rem;
    text-transform: uppercase;
    margin-bottom: 0.5rem;
  }

  .nav-link a {
    font-size: 1rem;
    margin: 1px;
    padding: 0.3rem 1rem;
    font: inherit;
    color: inherit;
    text-decoration: none;
    display: block;
  }

  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--theme-bg-hover);
  }

  .nav-link a[aria-current="page"] {
    color: var(--theme-text-accent);
    background-color: var(--theme-bg-accent);
    font-weight: 600;
  }

  .module-section {
    padding-top: clamp(1.5rem, 1.7vh, 4rem);
  }

  .top-section {
    padding-top: clamp(1.3rem, 1.5vh, 3rem);
  }

  h2,
  h3,
  h4 {
    margin-bottom: 0;
  }

  @media (min-width: 50em) {
    .nav-groups {
      padding: 0;
    }
  }
</style>

<style is:global>
  :root.theme-dark .nav-link a[aria-current="page"] {
    color: hsla(var(--color-base-white), 100%, 1);
  }
</style>
